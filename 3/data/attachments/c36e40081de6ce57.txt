# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Демонстрация работы filter
- Location: /home/runner/work/pwtestGURU/pwtestGURU/tests/arraysObjects.spec.js:46:7

# Error details

```
Error: locator.click: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('.article-preview').filter({ hasText: 'Gustave' })

    at /home/runner/work/pwtestGURU/pwtestGURU/tests/arraysObjects.spec.js:54:4
```

# Page snapshot

```yaml
- banner:
  - navigation:
    - link "conduit"
    - list:
      - listitem:
        - link " Source code"
    - list:
      - listitem:
        - link " Home"
      - listitem:
        - link " Login"
      - listitem:
        - link "Sign up"
- main:
  - heading "conduit" [level=1]
  - paragraph: A place to share your knowledge.
  - list:
    - listitem:
      - button "Global Feed"
  - link "test321":
    - img "test321"
  - link "test321"
  - text: June 17, 2025
  - button " ( 0 )"
  - link "Delete Me To be deleted Read more... delete":
    - heading "Delete Me" [level=1]
    - paragraph: To be deleted
    - text: Read more...
    - list:
      - listitem: delete
  - link "Maria_Kohler":
    - img "Maria_Kohler"
  - link "Maria_Kohler"
  - text: June 17, 2025
  - button " ( 4 )"
  - link "Incredible Cotton Cheese Ergonomic Bacon made with Concrete for all-day slight support Read more... Groove":
    - heading "Incredible Cotton Cheese" [level=1]
    - paragraph: Ergonomic Bacon made with Concrete for all-day slight support
    - text: Read more...
    - list:
      - listitem: Groove
  - link "Christa.Upton73":
    - img "Christa.Upton73"
  - link "Christa.Upton73"
  - text: June 17, 2025
  - button " ( 1 )"
  - link "Gorgeous Marble Gloves Ergonomic Fish made with Ceramic for all-day elegant support Read more... Dance":
    - heading "Gorgeous Marble Gloves" [level=1]
    - paragraph: Ergonomic Fish made with Ceramic for all-day elegant support
    - text: Read more...
    - list:
      - listitem: Dance
  - navigation "Pagination":
    - listitem:
      - button "Previous page" [disabled]: 
    - listitem:
      - button "Page 1 is your current page": "1"
    - listitem:
      - button "Page 2": "2"
    - listitem:
      - button "Page 3": "3"
    - listitem:
      - button "..."
    - listitem:
      - button "Page 5655": "5655"
    - listitem:
      - button "Page 5656": "5656"
    - listitem:
      - button "Page 5657": "5657"
    - listitem:
      - button "Next page": 
  - complementary:
    - heading "Popular Tags" [level=6]
    - button "реклама"
    - button "autus"
    - button "iste"
    - button "tripudio"
    - button "amplus"
    - button "inflammatio"
    - button "ver"
    - button "umbra"
    - button "apto"
    - button "bestia"
    - button "placeat"
    - button "vinitor"
    - button "asporto"
    - button "aestivus"
    - button "armarium"
    - button "adfectus"
    - button "conduco"
    - button "acsi"
    - button "timor"
    - button "bene"
    - button "sortitus"
    - button "sumo"
    - button "ustilo"
    - button "sperno"
    - button "trepide"
    - button "perferendis"
    - button "clamo"
    - button "videlicet"
    - button "cognatus"
    - button "vulgus"
    - button "voluptate"
    - button "consuasor"
    - button "denego"
    - button "conscendo"
    - button "tergum"
    - button "volutabrum"
    - button "verto"
    - button "cras"
    - button "capto"
    - button "peccatus"
    - button "subito"
    - button "confido"
    - button "subnecto"
    - button "creber"
    - button "abduco"
    - button "suggero"
    - button "vallum"
    - button "terra"
    - button "alienus"
    - button "vetus"
- contentinfo:
  - link "conduit"
  - text: An interactive learning project from
  - link "Thinkster"
  - text: . Code & design licensed under MIT.
  - list:
    - listitem:
      - link " Source code"
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import { faker } from '@faker-js/faker';
   3 |
   4 | const register = async (page, randomUser) => {
   5 |   await page.goto('https://realworld.qa.guru/');
   6 |   let { username, email, password} = randomUser;
   7 |
   8 |  /* {
   9 |     username: 'Garett_Parisian',
  10 |     email: 'Estella_Huels78@hotmail.com',
  11 |     password: 'w2zXWf8bobELAc7'
  12 |   }*/
  13 |
  14 |   await page.getByRole('link', { name: 'Sign up' }).click();
  15 |   await page.getByRole('textbox', { name: 'Your Name' }).click();
  16 |   /* Способ 1
  17 |   await page.getByRole('textbox', { name: 'Your Name' }).fill(randomUser.username);*/
  18 |
  19 |   await page.getByRole('textbox', { name: 'Your Name' }).fill(username);
  20 |   await page.getByRole('textbox', { name: 'Email' }).click();
  21 |   await page.getByRole('textbox', { name: 'Email' }).fill(email);
  22 |   await page.getByRole('textbox', { name: 'Password' }).click();
  23 |   await page.getByRole('textbox', { name: 'Password' }).fill(password);
  24 |   await page.getByRole('button', { name: 'Sign up' }).click();
  25 |   };
  26 |
  27 |   const getRandomUser = () => {
  28 |     
  29 |     const randomUser = {
  30 |         username: faker.internet.username(),
  31 |         email: faker.internet.email(),
  32 |         password: faker.internet.password(),
  33 |     };
  34 |      
  35 |   return randomUser;
  36 |   };
  37 |
  38 | test('авторизация через логин и пароль2', async ({ page }) => {
  39 |     const randomUser = getRandomUser();
  40 |     console.log(randomUser);
  41 |     await register (page, randomUser);
  42 |     await page.screenshot({ path: 'Error.png', fullPage: true });
  43 |     await expect(page.getByRole('navigation')).toContainText(randomUser.username);  
  44 |   }); 
  45 |
  46 |   test('Демонстрация работы filter', async ({ page }) => {
  47 | 	await page.goto('https://realworld.qa.guru/');
  48 | 	await page.waitForLoadState('networkidle');
  49 | 	const filteredArticles = await page
  50 | 		.locator('.article-preview')
  51 | 		.filter({
  52 | 			hasText: 'Gustave', // ищет текст в любом месте элемента или его потомков
  53 | 		})
> 54 | 		.click();
     | 		 ^ Error: locator.click: Test timeout of 30000ms exceeded.
  55 | 	//await expect(page.getByRole("navigation")).toContainText(username);
  56 | 	//	await page.screenshot({ path: 'screenshot1.png' });
  57 | });
```